% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pagination.R
\name{pagination}
\alias{pagination}
\title{Pagination}
\usage{
pagination(
  tabulator_object,
  mode = "local",
  pagination_size = 10,
  pagination_initial_page = 1,
  request_handler = NULL
)
}
\arguments{
\item{tabulator_object}{An object of class tabulator}

\item{mode}{A character. Default to local. You can see the available modes
by calling the function \code{get_available_pagination_modes()}.
When mode is \code{local} tabulator will send all of the data to the frontend
and the data will be paginated there.
When mode is \code{server} then only the requested data will be sent from the R
server to the frontend thus diminishing the amount of data being serialized
and sent to the browser. See the example app \code{shiny_app_server_pagination}.
When mode is \code{remote} the \code{request_handler} argument must be provided and only
the data returned by that function will be sent to the browser. Remote should
be chosen when our data source is external like an API or a Database. See the
example app \code{shiny_app_remote_api_pagination.R} in order to see the
request_handler callback used to query an API and also the
\code{shiny_app_remote_database.R} for an example callback used in order to query
a database with pagination.}

\item{pagination_size}{A numeric. Defaults to 10, the amount of records
shown by each page.}

\item{pagination_initial_page}{TODO pass this to JS}

\item{request_handler}{A function with the data and req parameters that is
passed as the \code{filterFunc} argument of \code{session$registerDataObj}}
}
\value{
An object of class tabulator
}
\description{
Paginate records shown in the table
}
\seealso{
\href{https://tabulator.info/docs/5.5/page}{tabulator documentation}
}
